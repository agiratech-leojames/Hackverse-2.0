{
  "version": "3.3",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "fad6e7fe696ab1f8c898f7e2fea32bdfa31ad5e8d108ba30aefd8963f6425d9a",
          "withoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076",
          "linkedWithoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8bc9bd3c9c7a2753d1adfd25e375354ace8232705896fa49149179bf267691b9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "39f4b37e13f1f3570a53a17d596a6dead6f5806fc1620041b5aa851b82ce4ea3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "43d8d3c37b226bf4994ce234e2a3cc7f500bbd934419ef52bf7cbf4cd70bdb38",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IncubeDeFi": {
        "src": "contracts/Nft.sol:7",
        "version": {
          "withMetadata": "9705f2816e9acbdad1c69e99c7881a6f76bfa5a5207b7af8075df66888ab97f4",
          "withoutMetadata": "fb8b9257a610331e404f9bf327f2b97890bbdcdf5d609a3ca3726ec292b7a4ee",
          "linkedWithoutMetadata": "fb8b9257a610331e404f9bf327f2b97890bbdcdf5d609a3ca3726ec292b7a4ee"
        },
        "inherit": [
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintNFT(uint256,address,uint256)",
          "safeMint(address,uint256)",
          "readStatusOfNft(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "IncubeDeFi",
            "src": "contracts/Nft.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "mintForIdentity",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "IncubeDeFi",
              "src": "contracts/Nft.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "128b4f7ec9cd269e51c013b9e597ab861b313a6d04e4fb827809d1a1fe28ac44",
          "withoutMetadata": "0cbd11fd726fbfa0104c56544135fef8588d516897af01c5466c6fe6ea77c903",
          "linkedWithoutMetadata": "0cbd11fd726fbfa0104c56544135fef8588d516897af01c5466c6fe6ea77c903"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_collateralAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2094_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2103_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2103_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2094_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2103_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2094_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)185_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)194_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)194_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)185_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)194_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)185_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "128b4f7ec9cd269e51c013b9e597ab861b313a6d04e4fb827809d1a1fe28ac44",
          "withoutMetadata": "0cbd11fd726fbfa0104c56544135fef8588d516897af01c5466c6fe6ea77c903",
          "linkedWithoutMetadata": "0cbd11fd726fbfa0104c56544135fef8588d516897af01c5466c6fe6ea77c903"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_collateralAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2094_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2103_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2103_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2094_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2103_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2094_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "b8f2a2e39ce049174fb609fa27175881d5de0b6f8c8b84d23b89d50bcba2bcff",
          "withoutMetadata": "931a73f20fe2da18bc1948b9d534ca6604016227cc45c6e2a8651a9672e4527a",
          "linkedWithoutMetadata": "931a73f20fe2da18bc1948b9d534ca6604016227cc45c6e2a8651a9672e4527a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_collateralAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2088_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2097_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2097_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2088_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2097_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2088_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "b8f2a2e39ce049174fb609fa27175881d5de0b6f8c8b84d23b89d50bcba2bcff",
          "withoutMetadata": "931a73f20fe2da18bc1948b9d534ca6604016227cc45c6e2a8651a9672e4527a",
          "linkedWithoutMetadata": "931a73f20fe2da18bc1948b9d534ca6604016227cc45c6e2a8651a9672e4527a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_collateralAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2088_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2097_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2097_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2088_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2097_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2088_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "f7d48e0a2b5e80293614b5e0eef9dcd5556e8936500197418c3c3e101c327aef",
          "withoutMetadata": "c6330b9da48695424d018529cbd34530bf5c1b7c7488261d95b2f27fec949774",
          "linkedWithoutMetadata": "c6330b9da48695424d018529cbd34530bf5c1b7c7488261d95b2f27fec949774"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_collateralAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2092_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2101_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2101_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2092_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2101_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2092_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "f7d48e0a2b5e80293614b5e0eef9dcd5556e8936500197418c3c3e101c327aef",
          "withoutMetadata": "c6330b9da48695424d018529cbd34530bf5c1b7c7488261d95b2f27fec949774",
          "linkedWithoutMetadata": "c6330b9da48695424d018529cbd34530bf5c1b7c7488261d95b2f27fec949774"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_collateralAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2092_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2101_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2101_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2092_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2101_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2092_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "539191717f496b1481349f74324a55483746a8479ad2e70d6ce3b3f919215b63",
          "withoutMetadata": "3fad2b4d3bc4389d7938b1c8a617d39e21aa024713ebbddc633631bd20c96539",
          "linkedWithoutMetadata": "3fad2b4d3bc4389d7938b1c8a617d39e21aa024713ebbddc633631bd20c96539"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_collateralAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2105_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2114_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2114_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2105_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2114_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2105_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "539191717f496b1481349f74324a55483746a8479ad2e70d6ce3b3f919215b63",
          "withoutMetadata": "3fad2b4d3bc4389d7938b1c8a617d39e21aa024713ebbddc633631bd20c96539",
          "linkedWithoutMetadata": "3fad2b4d3bc4389d7938b1c8a617d39e21aa024713ebbddc633631bd20c96539"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_collateralAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2105_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2114_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2114_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2105_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2114_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2105_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "623c60cb5ba7ea69e56113d0b5763fd24bfc2e867075360be2bb73f741b425d0",
          "withoutMetadata": "d501ef78b2db7da233030c83ee440e7331f3bd5607843daa7f918e5d742d0d8e",
          "linkedWithoutMetadata": "d501ef78b2db7da233030c83ee440e7331f3bd5607843daa7f918e5d742d0d8e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_collateralAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2105_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2114_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2114_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2105_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2114_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2105_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "623c60cb5ba7ea69e56113d0b5763fd24bfc2e867075360be2bb73f741b425d0",
          "withoutMetadata": "d501ef78b2db7da233030c83ee440e7331f3bd5607843daa7f918e5d742d0d8e",
          "linkedWithoutMetadata": "d501ef78b2db7da233030c83ee440e7331f3bd5607843daa7f918e5d742d0d8e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_collateralAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2105_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2114_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2114_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2105_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2114_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2105_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "fad6e7fe696ab1f8c898f7e2fea32bdfa31ad5e8d108ba30aefd8963f6425d9a",
          "withoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076",
          "linkedWithoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8bc9bd3c9c7a2753d1adfd25e375354ace8232705896fa49149179bf267691b9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "39f4b37e13f1f3570a53a17d596a6dead6f5806fc1620041b5aa851b82ce4ea3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "43d8d3c37b226bf4994ce234e2a3cc7f500bbd934419ef52bf7cbf4cd70bdb38",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IncubeDeFi": {
        "src": "contracts/Nft.sol:7",
        "version": {
          "withMetadata": "9705f2816e9acbdad1c69e99c7881a6f76bfa5a5207b7af8075df66888ab97f4",
          "withoutMetadata": "fb8b9257a610331e404f9bf327f2b97890bbdcdf5d609a3ca3726ec292b7a4ee",
          "linkedWithoutMetadata": "fb8b9257a610331e404f9bf327f2b97890bbdcdf5d609a3ca3726ec292b7a4ee"
        },
        "inherit": [
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintNFT(uint256,address,uint256)",
          "safeMint(address,uint256)",
          "readStatusOfNft(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "IncubeDeFi",
            "src": "contracts/Nft.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "mintForIdentity",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "IncubeDeFi",
              "src": "contracts/Nft.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "fad6e7fe696ab1f8c898f7e2fea32bdfa31ad5e8d108ba30aefd8963f6425d9a",
          "withoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076",
          "linkedWithoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8bc9bd3c9c7a2753d1adfd25e375354ace8232705896fa49149179bf267691b9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "39f4b37e13f1f3570a53a17d596a6dead6f5806fc1620041b5aa851b82ce4ea3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "43d8d3c37b226bf4994ce234e2a3cc7f500bbd934419ef52bf7cbf4cd70bdb38",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IncubeDeFi": {
        "src": "contracts/Nft.sol:7",
        "version": {
          "withMetadata": "9705f2816e9acbdad1c69e99c7881a6f76bfa5a5207b7af8075df66888ab97f4",
          "withoutMetadata": "fb8b9257a610331e404f9bf327f2b97890bbdcdf5d609a3ca3726ec292b7a4ee",
          "linkedWithoutMetadata": "fb8b9257a610331e404f9bf327f2b97890bbdcdf5d609a3ca3726ec292b7a4ee"
        },
        "inherit": [
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintNFT(uint256,address,uint256)",
          "safeMint(address,uint256)",
          "readStatusOfNft(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "IncubeDeFi",
            "src": "contracts/Nft.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "mintForIdentity",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "IncubeDeFi",
              "src": "contracts/Nft.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "fad6e7fe696ab1f8c898f7e2fea32bdfa31ad5e8d108ba30aefd8963f6425d9a",
          "withoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076",
          "linkedWithoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8bc9bd3c9c7a2753d1adfd25e375354ace8232705896fa49149179bf267691b9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "39f4b37e13f1f3570a53a17d596a6dead6f5806fc1620041b5aa851b82ce4ea3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "43d8d3c37b226bf4994ce234e2a3cc7f500bbd934419ef52bf7cbf4cd70bdb38",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IncubeDeFi": {
        "src": "contracts/Nft.sol:7",
        "version": {
          "withMetadata": "814d7162e140bacdebf36be3d23742217ba12564de77b5912d13441dbac67776",
          "withoutMetadata": "89a52feeae4b108af31bd83e52f2b00a042a638885e0957615f5363810301c4a",
          "linkedWithoutMetadata": "89a52feeae4b108af31bd83e52f2b00a042a638885e0957615f5363810301c4a"
        },
        "inherit": [
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "safeMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "IncubeDeFi",
            "src": "contracts/Nft.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "fad6e7fe696ab1f8c898f7e2fea32bdfa31ad5e8d108ba30aefd8963f6425d9a",
          "withoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076",
          "linkedWithoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8bc9bd3c9c7a2753d1adfd25e375354ace8232705896fa49149179bf267691b9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "39f4b37e13f1f3570a53a17d596a6dead6f5806fc1620041b5aa851b82ce4ea3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "43d8d3c37b226bf4994ce234e2a3cc7f500bbd934419ef52bf7cbf4cd70bdb38",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "a394ecbd19759ed9100562f362cd0b0e96755466856205512225842135c0de5b",
          "withoutMetadata": "d45abd8e9ac57d1bf41349be6b5f94209e57c6861a34f7d5088b3a69fdfe7cb8",
          "linkedWithoutMetadata": "d45abd8e9ac57d1bf41349be6b5f94209e57c6861a34f7d5088b3a69fdfe7cb8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)3437_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)3460_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)3460_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)3437_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)3460_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)3437_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)3460_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)3437_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IncubeDeFi": {
        "src": "contracts/Nft.sol:7",
        "version": {
          "withMetadata": "814d7162e140bacdebf36be3d23742217ba12564de77b5912d13441dbac67776",
          "withoutMetadata": "89a52feeae4b108af31bd83e52f2b00a042a638885e0957615f5363810301c4a",
          "linkedWithoutMetadata": "89a52feeae4b108af31bd83e52f2b00a042a638885e0957615f5363810301c4a"
        },
        "inherit": [
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "safeMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "IncubeDeFi",
            "src": "contracts/Nft.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)4643_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)4652_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)4652_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)4643_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)4652_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)4643_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "4a0f0062812524cd11f4851b4198a2a23a8ff720616f652fe978c94b56df667b",
          "withoutMetadata": "d45abd8e9ac57d1bf41349be6b5f94209e57c6861a34f7d5088b3a69fdfe7cb8",
          "linkedWithoutMetadata": "d45abd8e9ac57d1bf41349be6b5f94209e57c6861a34f7d5088b3a69fdfe7cb8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2099_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2108_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2108_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2099_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2108_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2099_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "4a0f0062812524cd11f4851b4198a2a23a8ff720616f652fe978c94b56df667b",
          "withoutMetadata": "d45abd8e9ac57d1bf41349be6b5f94209e57c6861a34f7d5088b3a69fdfe7cb8",
          "linkedWithoutMetadata": "d45abd8e9ac57d1bf41349be6b5f94209e57c6861a34f7d5088b3a69fdfe7cb8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256)",
          "claimTokenFromFundProvider(uint256,address,address)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()",
          "readDashboardBorrower(address,uint256)",
          "readDetailsPageFundProvider(address,uint256)",
          "readDetailsForBorrower(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestPercForBorrowerWhileRetuning",
            "src": "contracts/Escrow.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestPercForBorrowerWhileRetuning",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:28"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:76"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:77"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:78"
            },
            {
              "label": "totalAmountInvestedInIdentity",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)948_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)948_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)948_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_askingAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_businessName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)2099_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)2108_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)2108_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)2099_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)2108_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)2099_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "332215d110f3e672b2577a55b5bd7c8105ab9ec13580338dac0f26a103e36e95",
          "withoutMetadata": "1b913fcc6c5aa45e928caaf6fea6879bb702f65794db520523b66a6636cd8b2b",
          "linkedWithoutMetadata": "1b913fcc6c5aa45e928caaf6fea6879bb702f65794db520523b66a6636cd8b2b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256,uint256)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:67"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:68"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)941_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)941_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(LoanProviderRecord)922_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1852_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1861_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1861_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1852_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1861_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1852_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "332215d110f3e672b2577a55b5bd7c8105ab9ec13580338dac0f26a103e36e95",
          "withoutMetadata": "1b913fcc6c5aa45e928caaf6fea6879bb702f65794db520523b66a6636cd8b2b",
          "linkedWithoutMetadata": "1b913fcc6c5aa45e928caaf6fea6879bb702f65794db520523b66a6636cd8b2b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256,uint256)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:67"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:68"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)941_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)941_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(LoanProviderRecord)922_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1852_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1861_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1861_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1852_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1861_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1852_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "332215d110f3e672b2577a55b5bd7c8105ab9ec13580338dac0f26a103e36e95",
          "withoutMetadata": "1b913fcc6c5aa45e928caaf6fea6879bb702f65794db520523b66a6636cd8b2b",
          "linkedWithoutMetadata": "1b913fcc6c5aa45e928caaf6fea6879bb702f65794db520523b66a6636cd8b2b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256,uint256)",
          "repayBorrowedLoan(uint256)",
          "withdrawCollateralByBorrower(uint256)",
          "depositCollateralToFundProvider(address,uint256)",
          "depositByFundProvider(uint256,string,uint256,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:67"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:68"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)941_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)941_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(LoanProviderRecord)922_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1852_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1861_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1861_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1852_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1861_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1852_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "cb2a150377dc4efb02fbd6bf76c998f143e5db3eccc8b22a53dec16cacf40808",
          "withoutMetadata": "787faae813c4055ecdd0bb97b77dbacb08f85f41ebe5cab7493987bac5c2ee90",
          "linkedWithoutMetadata": "787faae813c4055ecdd0bb97b77dbacb08f85f41ebe5cab7493987bac5c2ee90"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256,uint256)",
          "repayBorrowedLoan(uint256)",
          "depositByFundProvider(uint256,string,uint256,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:67"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:68"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)941_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)941_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(LoanProviderRecord)922_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1725_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1734_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1734_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1725_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1734_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1725_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "cb2a150377dc4efb02fbd6bf76c998f143e5db3eccc8b22a53dec16cacf40808",
          "withoutMetadata": "787faae813c4055ecdd0bb97b77dbacb08f85f41ebe5cab7493987bac5c2ee90",
          "linkedWithoutMetadata": "787faae813c4055ecdd0bb97b77dbacb08f85f41ebe5cab7493987bac5c2ee90"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256,uint256)",
          "repayBorrowedLoan(uint256)",
          "depositByFundProvider(uint256,string,uint256,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:67"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:68"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)941_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)941_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(LoanProviderRecord)922_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1725_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1734_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1734_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1725_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1734_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1725_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "9982680da63e6fee2e85f294e4710c872d11f8eb5824b3fa5d096cbb0fe9468c",
          "withoutMetadata": "1a84c1763948a8828a3902bed640314acf84cde6fce9e19fd4b718716da9c7a2",
          "linkedWithoutMetadata": "1a84c1763948a8828a3902bed640314acf84cde6fce9e19fd4b718716da9c7a2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256,uint256)",
          "repayBorrowedLoan(uint256)",
          "depositByFundProvider(uint256,string,uint256,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:67"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:68"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)941_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)941_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(LoanProviderRecord)922_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1736_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1745_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1745_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1736_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1745_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1736_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "9982680da63e6fee2e85f294e4710c872d11f8eb5824b3fa5d096cbb0fe9468c",
          "withoutMetadata": "1a84c1763948a8828a3902bed640314acf84cde6fce9e19fd4b718716da9c7a2",
          "linkedWithoutMetadata": "1a84c1763948a8828a3902bed640314acf84cde6fce9e19fd4b718716da9c7a2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256,uint256)",
          "repayBorrowedLoan(uint256)",
          "depositByFundProvider(uint256,string,uint256,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:67"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:68"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)941_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)941_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(LoanProviderRecord)922_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1736_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1745_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1745_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1736_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1745_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1736_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "72ba99da60947ae271357aa31a4fbe9c1da22c979779748e01b24e8b24633e68",
          "withoutMetadata": "668b2b61e2ff181a6fe7cec2bc98d681cc1b2500d8c95a46ddefc48b4e7f9779",
          "linkedWithoutMetadata": "668b2b61e2ff181a6fe7cec2bc98d681cc1b2500d8c95a46ddefc48b4e7f9779"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256,uint256)",
          "repayBorrowedLoan(uint256)",
          "depositByFundProvider(uint256,string,uint256,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:67"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:68"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)941_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)941_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(LoanProviderRecord)922_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1758_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1767_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1767_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1758_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1767_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1758_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "72ba99da60947ae271357aa31a4fbe9c1da22c979779748e01b24e8b24633e68",
          "withoutMetadata": "668b2b61e2ff181a6fe7cec2bc98d681cc1b2500d8c95a46ddefc48b4e7f9779",
          "linkedWithoutMetadata": "668b2b61e2ff181a6fe7cec2bc98d681cc1b2500d8c95a46ddefc48b4e7f9779"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositTreasury(uint256)",
          "depositByBorrower(uint256,string,string,uint256,uint256,uint256)",
          "repayBorrowedLoan(uint256)",
          "depositByFundProvider(uint256,string,uint256,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "collateralPercentage",
            "src": "contracts/Escrow.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "collateralPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:27"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:67"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:68"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:69"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:70"
            },
            {
              "label": "loanBorrowerDetails",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:71"
            },
            {
              "label": "borrowerIdentityNumber",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:72"
            },
            {
              "label": "businessRisk",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:73"
            },
            {
              "label": "remainingBalanceForBorrower",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:74"
            },
            {
              "label": "statusOfBorrower",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(address => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanBorrower)941_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanBorrower))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanBorrower)941_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)922_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanBorrower)941_storage": {
              "label": "struct Escrow.LoanBorrower",
              "members": [
                {
                  "label": "_amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taxDeducted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "riskStatus",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_dueTimes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_duePerInstallment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_totalAmountWithInterest",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_maturityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(LoanProviderRecord)922_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identityNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1758_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1767_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1767_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1758_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1767_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1758_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "290ce89239a07bcfebbdf2d03458b348ac0cf310663049729a92ddad7195fcf9",
          "withoutMetadata": "aea3c4e69a0df5562b94741d32f9bf7702c1097e9fd75fff7b21f8a6c9a5723c",
          "linkedWithoutMetadata": "aea3c4e69a0df5562b94741d32f9bf7702c1097e9fd75fff7b21f8a6c9a5723c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1357_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1366_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1366_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1357_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1366_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1357_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "290ce89239a07bcfebbdf2d03458b348ac0cf310663049729a92ddad7195fcf9",
          "withoutMetadata": "aea3c4e69a0df5562b94741d32f9bf7702c1097e9fd75fff7b21f8a6c9a5723c",
          "linkedWithoutMetadata": "aea3c4e69a0df5562b94741d32f9bf7702c1097e9fd75fff7b21f8a6c9a5723c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1357_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1366_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1366_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1357_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1366_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1357_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "d1640cb0b8b2156c9f9c69a6ffc7eb75afc06c88bc14b0da0ad2daeaeab0fc3a",
          "withoutMetadata": "9ada98dff783094d016a3b1b23a3c5ebb7b013d7635ec1279f08425e5276d876",
          "linkedWithoutMetadata": "9ada98dff783094d016a3b1b23a3c5ebb7b013d7635ec1279f08425e5276d876"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1374_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1383_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1383_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1374_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1383_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1374_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "d1640cb0b8b2156c9f9c69a6ffc7eb75afc06c88bc14b0da0ad2daeaeab0fc3a",
          "withoutMetadata": "9ada98dff783094d016a3b1b23a3c5ebb7b013d7635ec1279f08425e5276d876",
          "linkedWithoutMetadata": "9ada98dff783094d016a3b1b23a3c5ebb7b013d7635ec1279f08425e5276d876"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1374_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1383_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1383_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1374_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1383_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1374_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "9b6586a62a2cdb0b883b68cc49f6767f50b3d1f8d281aa1c524794502a6e2335",
          "withoutMetadata": "f4df4909f50a8aefe32a59e1947ba41cce0929b09f8d3a4e5834ecc9b0814581",
          "linkedWithoutMetadata": "f4df4909f50a8aefe32a59e1947ba41cce0929b09f8d3a4e5834ecc9b0814581"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1379_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1388_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1388_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1379_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1388_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1379_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "9b6586a62a2cdb0b883b68cc49f6767f50b3d1f8d281aa1c524794502a6e2335",
          "withoutMetadata": "f4df4909f50a8aefe32a59e1947ba41cce0929b09f8d3a4e5834ecc9b0814581",
          "linkedWithoutMetadata": "f4df4909f50a8aefe32a59e1947ba41cce0929b09f8d3a4e5834ecc9b0814581"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1379_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1388_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1388_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1379_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1388_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1379_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "9b6586a62a2cdb0b883b68cc49f6767f50b3d1f8d281aa1c524794502a6e2335",
          "withoutMetadata": "f4df4909f50a8aefe32a59e1947ba41cce0929b09f8d3a4e5834ecc9b0814581",
          "linkedWithoutMetadata": "f4df4909f50a8aefe32a59e1947ba41cce0929b09f8d3a4e5834ecc9b0814581"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1379_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1388_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1388_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1379_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1388_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1379_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "072c27c533aeca46ecb0865d6e16a116267419061d91912adee0f134ca32555d",
          "withoutMetadata": "124e25bc319bcf2e2c0ea3d138fdda68a4ad4560cb59dcfd0688c9445b843fac",
          "linkedWithoutMetadata": "124e25bc319bcf2e2c0ea3d138fdda68a4ad4560cb59dcfd0688c9445b843fac"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1387_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1396_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1396_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1387_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1396_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1387_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "072c27c533aeca46ecb0865d6e16a116267419061d91912adee0f134ca32555d",
          "withoutMetadata": "124e25bc319bcf2e2c0ea3d138fdda68a4ad4560cb59dcfd0688c9445b843fac",
          "linkedWithoutMetadata": "124e25bc319bcf2e2c0ea3d138fdda68a4ad4560cb59dcfd0688c9445b843fac"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            },
            {
              "label": "finalBalance",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1387_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1396_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1396_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1387_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1396_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1387_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "ca966733870082c0720723635ec5f0379737a69dbc5a034cebe88764466442f9",
          "withoutMetadata": "ea797d2f54a5e9c4f90b20163a58b475348761997d937b6b6e71b3ad71159439",
          "linkedWithoutMetadata": "ea797d2f54a5e9c4f90b20163a58b475348761997d937b6b6e71b3ad71159439"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1368_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1377_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1377_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1368_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1377_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1368_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "ca966733870082c0720723635ec5f0379737a69dbc5a034cebe88764466442f9",
          "withoutMetadata": "ea797d2f54a5e9c4f90b20163a58b475348761997d937b6b6e71b3ad71159439",
          "linkedWithoutMetadata": "ea797d2f54a5e9c4f90b20163a58b475348761997d937b6b6e71b3ad71159439"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1368_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1377_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1377_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1368_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1377_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1368_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "5d19a3cddc2aad9d521aab2ee9942dcfa7da22100966a6e4f49e459747cc7264",
          "withoutMetadata": "97bd3148895e9b4628692816b248711e637f383306c89da9c9db741faf10e6cc",
          "linkedWithoutMetadata": "97bd3148895e9b4628692816b248711e637f383306c89da9c9db741faf10e6cc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1372_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1381_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1381_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1372_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1381_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1372_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "5d19a3cddc2aad9d521aab2ee9942dcfa7da22100966a6e4f49e459747cc7264",
          "withoutMetadata": "97bd3148895e9b4628692816b248711e637f383306c89da9c9db741faf10e6cc",
          "linkedWithoutMetadata": "97bd3148895e9b4628692816b248711e637f383306c89da9c9db741faf10e6cc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1372_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1381_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1381_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1372_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1381_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1372_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "mock": {
        "src": "contracts/mock.sol:7",
        "version": {
          "withMetadata": "86d903a81c7bbe0588e45235c5d24e248c93ee0d612127c32bb913497fa8661f",
          "withoutMetadata": "5ab5366c662679d0d0d2fef5eb7a668a0adeb98dd640f03ec80f3f0e267cd981",
          "linkedWithoutMetadata": "5ab5366c662679d0d0d2fef5eb7a668a0adeb98dd640f03ec80f3f0e267cd981"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "depositTokens(uint256)",
          "withdrawTokens(uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "mock",
            "src": "contracts/mock.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "erc20Token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "mock",
              "src": "contracts/mock.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "mock": {
        "src": "contracts/mock.sol:7",
        "version": {
          "withMetadata": "86d903a81c7bbe0588e45235c5d24e248c93ee0d612127c32bb913497fa8661f",
          "withoutMetadata": "5ab5366c662679d0d0d2fef5eb7a668a0adeb98dd640f03ec80f3f0e267cd981",
          "linkedWithoutMetadata": "5ab5366c662679d0d0d2fef5eb7a668a0adeb98dd640f03ec80f3f0e267cd981"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "depositTokens(uint256)",
          "withdrawTokens(uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "mock",
            "src": "contracts/mock.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "erc20Token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "mock",
              "src": "contracts/mock.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "0f19793f092745551562141ed601a397ff0ed805dcf329dc858604db56ba43ae",
          "withoutMetadata": "97bd3148895e9b4628692816b248711e637f383306c89da9c9db741faf10e6cc",
          "linkedWithoutMetadata": "97bd3148895e9b4628692816b248711e637f383306c89da9c9db741faf10e6cc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1373_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1382_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1382_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1373_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1382_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1373_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "0f19793f092745551562141ed601a397ff0ed805dcf329dc858604db56ba43ae",
          "withoutMetadata": "97bd3148895e9b4628692816b248711e637f383306c89da9c9db741faf10e6cc",
          "linkedWithoutMetadata": "97bd3148895e9b4628692816b248711e637f383306c89da9c9db741faf10e6cc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1373_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1382_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1382_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1373_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1382_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1373_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "fca4be9785fe95c65e75ac2f01c76ffa4df23e75a36a5ce033a3c96cad331f4f",
          "withoutMetadata": "a6715e258c039e7c140e0095301ff9f5b5c3770e5d34df80ac7087082385fa91",
          "linkedWithoutMetadata": "a6715e258c039e7c140e0095301ff9f5b5c3770e5d34df80ac7087082385fa91"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1373_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1382_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1382_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1373_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1382_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1373_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "fca4be9785fe95c65e75ac2f01c76ffa4df23e75a36a5ce033a3c96cad331f4f",
          "withoutMetadata": "a6715e258c039e7c140e0095301ff9f5b5c3770e5d34df80ac7087082385fa91",
          "linkedWithoutMetadata": "a6715e258c039e7c140e0095301ff9f5b5c3770e5d34df80ac7087082385fa91"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)",
          "getContractBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)777",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1373_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1382_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1382_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1373_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1382_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1373_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "770f7502ebceca160c961375ca06f5384b0abf2b82a9eca253a2aef46f2506d4",
          "withoutMetadata": "d89ef8830428e1a38245a91893121d711165fc9803bda264ff05982a3bdac33f",
          "linkedWithoutMetadata": "d89ef8830428e1a38245a91893121d711165fc9803bda264ff05982a3bdac33f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)916_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1356_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1365_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1365_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1356_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1365_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1356_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "770f7502ebceca160c961375ca06f5384b0abf2b82a9eca253a2aef46f2506d4",
          "withoutMetadata": "d89ef8830428e1a38245a91893121d711165fc9803bda264ff05982a3bdac33f",
          "linkedWithoutMetadata": "d89ef8830428e1a38245a91893121d711165fc9803bda264ff05982a3bdac33f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)916_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1356_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1365_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1365_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1356_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1365_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1356_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "b0f67c6a10b0427a1275b735ee99120cb84fa35c675b3bb89c6ef6500b92f3dd",
          "withoutMetadata": "0f1962df70590b000d981c9a51cbabe4350e6704418b49adbd8d69caf5434004",
          "linkedWithoutMetadata": "0f1962df70590b000d981c9a51cbabe4350e6704418b49adbd8d69caf5434004"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)916_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1333_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1342_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1342_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1333_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1342_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1333_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "b0f67c6a10b0427a1275b735ee99120cb84fa35c675b3bb89c6ef6500b92f3dd",
          "withoutMetadata": "0f1962df70590b000d981c9a51cbabe4350e6704418b49adbd8d69caf5434004",
          "linkedWithoutMetadata": "0f1962df70590b000d981c9a51cbabe4350e6704418b49adbd8d69caf5434004"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)916_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)916_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1333_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1342_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1342_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1333_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1342_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1333_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "29808dc7cc958dc2a2b6fa835f1a7cf2414e12848a2dd355390951cd4cd25b7d",
          "withoutMetadata": "efec2dfdf1c949ffd3cb0f634b80d65bd6ddf2b629c2da7c08df91d94bdeaccb",
          "linkedWithoutMetadata": "efec2dfdf1c949ffd3cb0f634b80d65bd6ddf2b629c2da7c08df91d94bdeaccb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForLowRisk",
            "src": "contracts/Escrow.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForMediumRisk",
            "src": "contracts/Escrow.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForHighRisk",
            "src": "contracts/Escrow.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "interestForLowRisk",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:20"
            },
            {
              "label": "interestForMediumRisk",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:21"
            },
            {
              "label": "interestForHighRisk",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:22"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1338_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1347_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1347_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1338_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1347_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1338_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "29808dc7cc958dc2a2b6fa835f1a7cf2414e12848a2dd355390951cd4cd25b7d",
          "withoutMetadata": "efec2dfdf1c949ffd3cb0f634b80d65bd6ddf2b629c2da7c08df91d94bdeaccb",
          "linkedWithoutMetadata": "efec2dfdf1c949ffd3cb0f634b80d65bd6ddf2b629c2da7c08df91d94bdeaccb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "treasury(uint256)",
          "depositByFundProvider(uint256,string,uint256)",
          "releasePaymentToFundProvider(address,uint256)",
          "enquiryFundDetailsFundProvider(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForLowRisk",
            "src": "contracts/Escrow.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForMediumRisk",
            "src": "contracts/Escrow.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForHighRisk",
            "src": "contracts/Escrow.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "interestForLowRisk",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:20"
            },
            {
              "label": "interestForMediumRisk",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:21"
            },
            {
              "label": "interestForHighRisk",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:22"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "taxedTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:25"
            },
            {
              "label": "tokensInPool",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:26"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:54"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)925_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)925_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1338_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1347_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1347_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1338_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1347_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1338_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "de4e4bd2d94668ad729e122fe030f940577626f074eb6bdda5a2980a24cbcc45",
          "withoutMetadata": "a960be7d17ae9e8b3bb819b2205b8961a36499741d485da067b81c230fc3f8f5",
          "linkedWithoutMetadata": "a960be7d17ae9e8b3bb819b2205b8961a36499741d485da067b81c230fc3f8f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositByFundProvider(uint256,string)",
          "enquiryFundDetailsFundProvider(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForLowRisk",
            "src": "contracts/Escrow.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForMediumRisk",
            "src": "contracts/Escrow.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForHighRisk",
            "src": "contracts/Escrow.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "interestForLowRisk",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:20"
            },
            {
              "label": "interestForMediumRisk",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:21"
            },
            {
              "label": "interestForHighRisk",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:22"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:50"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:51"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:52"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1223_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1232_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1232_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1223_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1232_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1223_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "de4e4bd2d94668ad729e122fe030f940577626f074eb6bdda5a2980a24cbcc45",
          "withoutMetadata": "a960be7d17ae9e8b3bb819b2205b8961a36499741d485da067b81c230fc3f8f5",
          "linkedWithoutMetadata": "a960be7d17ae9e8b3bb819b2205b8961a36499741d485da067b81c230fc3f8f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositByFundProvider(uint256,string)",
          "enquiryFundDetailsFundProvider(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForLowRisk",
            "src": "contracts/Escrow.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForMediumRisk",
            "src": "contracts/Escrow.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForHighRisk",
            "src": "contracts/Escrow.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "interestForLowRisk",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:20"
            },
            {
              "label": "interestForMediumRisk",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:21"
            },
            {
              "label": "interestForHighRisk",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:22"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:50"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:51"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:52"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1223_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1232_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1232_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1223_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1232_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1223_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "e0c6eceead520c04e7e5509aaa8b7c1df60c13523548795bb3c7b14bf73822cf",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Escrow": {
        "src": "contracts/Escrow.sol:8",
        "version": {
          "withMetadata": "b63dbd4da0d394684b79e059692c6bceed1ae55cc6c9d8a723f4de657e453a90",
          "withoutMetadata": "a84202774f17083603d811d9980ca56424693b20f954a0ab4034b204e668432b",
          "linkedWithoutMetadata": "a84202774f17083603d811d9980ca56424693b20f954a0ab4034b204e668432b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositByFundProvider(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "l",
            "src": "contracts/Escrow.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "m",
            "src": "contracts/Escrow.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "h",
            "src": "contracts/Escrow.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForLowRisk",
            "src": "contracts/Escrow.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForMediumRisk",
            "src": "contracts/Escrow.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "interestForHighRisk",
            "src": "contracts/Escrow.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "registrationContractAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:10"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:11"
            },
            {
              "label": "l",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:16"
            },
            {
              "label": "m",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:17"
            },
            {
              "label": "h",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:18"
            },
            {
              "label": "interestForLowRisk",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:20"
            },
            {
              "label": "interestForMediumRisk",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:21"
            },
            {
              "label": "interestForHighRisk",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:22"
            },
            {
              "label": "identificationNumber",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:23"
            },
            {
              "label": "interestGenerator",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:50"
            },
            {
              "label": "isIdForInvestor",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:51"
            },
            {
              "label": "loanProviderDetails",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:52"
            },
            {
              "label": "allIdentificationAssociatedWithLoanProviderAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Escrow.LoanProviderRecord))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LoanProviderRecord)919_storage)": {
              "label": "mapping(uint256 => struct Escrow.LoanProviderRecord)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LoanProviderRecord)919_storage": {
              "label": "struct Escrow.LoanProviderRecord",
              "members": [
                {
                  "label": "_loanProviderAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_identificationNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_amountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_interestPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_collectedTax",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_actualAmountInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_selectedBond",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_speculatingInterestAndPrincipal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "76f8b9e91fcdd2d75a64cc83e5c307ec0c66d2bfbe832f465836f41b21e7b2b2",
          "withoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb",
          "linkedWithoutMetadata": "b0749199a6367991e32d7faab501ce6af01b4279cfaf7e7b3e781c4202ace1eb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)1206_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)1215_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)1215_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)1206_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)1215_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(loanProvider)1206_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "04820d37d28db796a1e47e80e7b0740e63a9f519b539eb7cd0d44ad347400507",
          "withoutMetadata": "3ae63e255e5ba49d40f16b1f4a0fa7b69a194e2d705c2efffeba6ee5550df979",
          "linkedWithoutMetadata": "3ae63e255e5ba49d40f16b1f4a0fa7b69a194e2d705c2efffeba6ee5550df979"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)185_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)196_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)196_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)185_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)196_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "business_reg_number",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(loanProvider)185_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC2771Context": {
        "src": "@openzeppelin/contracts/metatx/ERC2771Context.sol:11",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "MinimalForwarder": {
        "src": "@openzeppelin/contracts/metatx/MinimalForwarder.sol:17",
        "version": {
          "withMetadata": "28563dca770fa2ba4ca7af25e15b36d03f48a426fa603d26de13b0310c1b9c6b",
          "withoutMetadata": "8dcf35d4bac871d0b7098500b83e12f9bcfdcbf981e7a04f4176f9580dec873b",
          "linkedWithoutMetadata": "8dcf35d4bac871d0b7098500b83e12f9bcfdcbf981e7a04f4176f9580dec873b"
        },
        "inherit": [
          "EIP712"
        ],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "()",
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes),bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes),bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MinimalForwarder",
            "src": "@openzeppelin/contracts/metatx/MinimalForwarder.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MinimalForwarder",
              "src": "@openzeppelin/contracts/metatx/MinimalForwarder.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "fad6e7fe696ab1f8c898f7e2fea32bdfa31ad5e8d108ba30aefd8963f6425d9a",
          "withoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076",
          "linkedWithoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8bc9bd3c9c7a2753d1adfd25e375354ace8232705896fa49149179bf267691b9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "39f4b37e13f1f3570a53a17d596a6dead6f5806fc1620041b5aa851b82ce4ea3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "eb3d2617da938e1801e4b531ba3534e545c4fa817689902d79c693163cff4177",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:27",
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_CACHED_DOMAIN_SEPARATOR",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:31"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_CACHED_CHAIN_ID",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_CACHED_THIS",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:33"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_HASHED_NAME",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_HASHED_VERSION",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:36"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_TYPE_HASH",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:37"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "43d8d3c37b226bf4994ce234e2a3cc7f500bbd934419ef52bf7cbf4cd70bdb38",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Registration": {
        "src": "contracts/Registration.sol:20",
        "version": {
          "withMetadata": "04820d37d28db796a1e47e80e7b0740e63a9f519b539eb7cd0d44ad347400507",
          "withoutMetadata": "3ae63e255e5ba49d40f16b1f4a0fa7b69a194e2d705c2efffeba6ee5550df979",
          "linkedWithoutMetadata": "3ae63e255e5ba49d40f16b1f4a0fa7b69a194e2d705c2efffeba6ee5550df979"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "registerLoanProvider(string,string)",
          "registerLoanBorrower(string,string,string,string)",
          "isLoanProviderRegistered(address)",
          "isLoanBorrowerRegistered(address)",
          "getAllLoanProvidersAddress()",
          "getAllLoanBorrowersAddress()",
          "returnLoanProviderDetails(address)",
          "returnLoanBorrowerDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "loanProviders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:23"
            },
            {
              "label": "loanBorrowers",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Registration",
              "src": "contracts/Registration.sol:26"
            },
            {
              "label": "isRegisteredLoanProvider",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:36"
            },
            {
              "label": "isRegisteredLoanBorrower",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:37"
            },
            {
              "label": "storeLoanProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(loanProvider)3462_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:38"
            },
            {
              "label": "storeLoanBorrower",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(loanBorrower)3473_storage)",
              "contract": "Registration",
              "src": "contracts/Registration.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanBorrower)3473_storage)": {
              "label": "mapping(address => struct Registration.loanBorrower)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(loanProvider)3462_storage)": {
              "label": "mapping(address => struct Registration.loanProvider)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(loanBorrower)3473_storage": {
              "label": "struct Registration.loanBorrower",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "business_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "business_reg_number",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(loanProvider)3462_storage": {
              "label": "struct Registration.loanProvider",
              "members": [
                {
                  "label": "first_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "last_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wallet_address",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "UserLandRegistration": {
        "src": "contracts/UserLandRegistration.sol:10",
        "version": {
          "withMetadata": "7043b4fecbf6a4fc26927fec3d040a1990d30620d91706e463143881e713ac13",
          "withoutMetadata": "6e31bbe89d755f2c14e8fd99fb8277d61f5ecbf4aadc541703f30065d7f26734",
          "linkedWithoutMetadata": "6e31bbe89d755f2c14e8fd99fb8277d61f5ecbf4aadc541703f30065d7f26734"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ERC2771Context",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addAdmin(address)",
          "readuserRegMap(address,string)",
          "readeventForUserRegMap(address,string)",
          "UserRegistration((string,string,string,string,address,string,string,string))",
          "readeventForLandRegMap(address,string)",
          "LandRegistration((address,uint256,string,string,uint256,uint256,string))",
          "readtransferMap(address,string)",
          "readeventForTransferMap(address,string)",
          "TransferDocumentsToBuyer(address,string,uint256,string)",
          "readcreateNFTMap(address,string)",
          "readeventForCreateNFTMap(address,string)",
          "createNftForRegisteredUsers(address,string)",
          "readlayoutStatus(string)",
          "LayoutCoordinatesStore(string,struct UserLandRegistration.Layout[],(string,string))",
          "getAllIds()",
          "verifyUser(address)",
          "checkUserAndIdVerification(address,uint256)",
          "getAllUserAddresses()",
          "getUserDetailsStruct(address,uint256)",
          "getLandDetailsStruct(address,string)",
          "receivedDocumentVerification(address,string)",
          "landOwnershipDetails(address,string)",
          "getLayoutInformation(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UserLandRegistration",
            "src": "contracts/UserLandRegistration.sol:120"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "contractAdmin",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:19"
            },
            {
              "label": "allUserAddresses",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:20"
            },
            {
              "label": "adminAddresses",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:21"
            },
            {
              "label": "autoGenerateId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:24"
            },
            {
              "label": "nftAutoId",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:25"
            },
            {
              "label": "autoIds",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:26"
            },
            {
              "label": "layoutData",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(Layout)3823_storage)dyn_storage)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:87"
            },
            {
              "label": "layoutMas",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_string_memory_ptr,t_struct(LayoutMaster)3828_storage)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:88"
            },
            {
              "label": "checkUserAddressAndIdLinked",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:92"
            },
            {
              "label": "userInfoStruct",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserInformation)3776_storage))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:94"
            },
            {
              "label": "landInfoStruct",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(LandInformation)3791_storage))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:96"
            },
            {
              "label": "userVerify",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:97"
            },
            {
              "label": "landRegistered",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:98"
            },
            {
              "label": "currentLandOwner",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_string_memory_ptr,t_struct(LandOwner)3798_storage)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:99"
            },
            {
              "label": "docsReceived",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)3809_storage))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:100"
            },
            {
              "label": "oldOwnerName",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:101"
            },
            {
              "label": "currentLandOwnerInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:102"
            },
            {
              "label": "LayoutDetails",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_string_memory_ptr,t_struct(LayoutInformation)3818_storage)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:103"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:104"
            },
            {
              "label": "userRegMap",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:152"
            },
            {
              "label": "eventForUserRegMap",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:153"
            },
            {
              "label": "eventForLandRegMap",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:195"
            },
            {
              "label": "transferMap",
              "offset": 0,
              "slot": "28",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:232"
            },
            {
              "label": "eventForTransferMap",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:233"
            },
            {
              "label": "createNFTMap",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:279"
            },
            {
              "label": "eventForCreateNFTMap",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:280"
            },
            {
              "label": "layoutStatus",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:326"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Layout)3823_storage)dyn_storage": {
              "label": "struct UserLandRegistration.Layout[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
              "label": "mapping(address => mapping(string => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)3809_storage))": {
              "label": "mapping(address => mapping(string => struct UserLandRegistration.DocumentReceivedViaTransfer))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(LandInformation)3791_storage))": {
              "label": "mapping(address => mapping(string => struct UserLandRegistration.LandInformation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserInformation)3776_storage))": {
              "label": "mapping(address => mapping(uint256 => struct UserLandRegistration.UserInformation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_array(t_struct(Layout)3823_storage)dyn_storage)": {
              "label": "mapping(string => struct UserLandRegistration.Layout[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))": {
              "label": "mapping(string => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)3809_storage)": {
              "label": "mapping(string => struct UserLandRegistration.DocumentReceivedViaTransfer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LandInformation)3791_storage)": {
              "label": "mapping(string => struct UserLandRegistration.LandInformation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LandOwner)3798_storage)": {
              "label": "mapping(string => struct UserLandRegistration.LandOwner)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LayoutInformation)3818_storage)": {
              "label": "mapping(string => struct UserLandRegistration.LayoutInformation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LayoutMaster)3828_storage)": {
              "label": "mapping(string => struct UserLandRegistration.LayoutMaster)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(UserInformation)3776_storage)": {
              "label": "mapping(uint256 => struct UserLandRegistration.UserInformation)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DocumentReceivedViaTransfer)3809_storage": {
              "label": "struct UserLandRegistration.DocumentReceivedViaTransfer",
              "members": [
                {
                  "label": "_firstname",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_docs",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(LandInformation)3791_storage": {
              "label": "struct UserLandRegistration.LandInformation",
              "members": [
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_uniqueId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_landType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_areaOfLand",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_timestampOfModification",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_docs",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(LandOwner)3798_storage": {
              "label": "struct UserLandRegistration.LandOwner",
              "members": [
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_userAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Layout)3823_storage": {
              "label": "struct UserLandRegistration.Layout",
              "members": [
                {
                  "label": "groupCoordinates_lattitude",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "groupCoordinates_longitude",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(LayoutInformation)3818_storage": {
              "label": "struct UserLandRegistration.LayoutInformation",
              "members": [
                {
                  "label": "plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "coordinates",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "masterCoordinate",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(LayoutMaster)3828_storage": {
              "label": "struct UserLandRegistration.LayoutMaster",
              "members": [
                {
                  "label": "masterLang",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "masterLong",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserInformation)3776_storage": {
              "label": "struct UserLandRegistration.UserInformation",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ph_number",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_pincode",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_email",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_gender",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_national_id",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_tin",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "withoutMeta": {
        "src": "contracts/withoutMeta.sol:10",
        "version": {
          "withMetadata": "e6b474e8a39ae03b421e3e0d46d3561e91609e362af5c39fb7f98ce48c0912a5",
          "withoutMetadata": "79dd25f6f4b65a9f2dd5ac2a535ae63a98ed69c7a8483a69e3a8db173ad1b762",
          "linkedWithoutMetadata": "79dd25f6f4b65a9f2dd5ac2a535ae63a98ed69c7a8483a69e3a8db173ad1b762"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "UserRegistration((string,string,string,uint256,uint256,string,string,string,address,string,string,string,string,string,string,string))",
          "LandRegistration((address,uint256,string,string,string,string,uint256,uint256,uint256,uint256,string,string,string,string))",
          "TransferDocumentsToBuyer(address,string,uint256,string)",
          "createNftForRegisteredUsers(address,string)",
          "LayoutCoordinates((string,string,string))",
          "getAllIds()",
          "verifyUser(address)",
          "checkUserAndIdVerification(address,uint256)",
          "getAllUserAddresses()",
          "getUserDetailsStruct(address,uint256)",
          "getLandDetailsStruct(address,string)",
          "receivedDocumentVerification(address,string)",
          "landOwnershipDetails(address,string)",
          "getLayoutInformation(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "withoutMeta",
            "src": "contracts/withoutMeta.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "contractAdmin",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:18"
            },
            {
              "label": "allUserAddresses",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:19"
            },
            {
              "label": "autoGenerateId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:22"
            },
            {
              "label": "nftAutoId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:23"
            },
            {
              "label": "autoIds",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:24"
            },
            {
              "label": "checkUserAddressAndIdLinked",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:93"
            },
            {
              "label": "userInfoStruct",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserInformation)5123_storage))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:95"
            },
            {
              "label": "landInfoStruct",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(LandInformation)5152_storage))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:97"
            },
            {
              "label": "userVerify",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:98"
            },
            {
              "label": "landRegistered",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:99"
            },
            {
              "label": "currentLandOwner",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_string_memory_ptr,t_struct(LandOwner)5159_storage)",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:100"
            },
            {
              "label": "docsReceived",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)5176_storage))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:101"
            },
            {
              "label": "oldOwnerName",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:102"
            },
            {
              "label": "currentLandOwnerInfo",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:103"
            },
            {
              "label": "LayoutDetails",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_string_memory_ptr,t_struct(LayoutInformation)5183_storage)",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
              "label": "mapping(address => mapping(string => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)5176_storage))": {
              "label": "mapping(address => mapping(string => struct withoutMeta.DocumentReceivedViaTransfer))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(LandInformation)5152_storage))": {
              "label": "mapping(address => mapping(string => struct withoutMeta.LandInformation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserInformation)5123_storage))": {
              "label": "mapping(address => mapping(uint256 => struct withoutMeta.UserInformation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))": {
              "label": "mapping(string => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)5176_storage)": {
              "label": "mapping(string => struct withoutMeta.DocumentReceivedViaTransfer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LandInformation)5152_storage)": {
              "label": "mapping(string => struct withoutMeta.LandInformation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LandOwner)5159_storage)": {
              "label": "mapping(string => struct withoutMeta.LandOwner)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LayoutInformation)5183_storage)": {
              "label": "mapping(string => struct withoutMeta.LayoutInformation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(UserInformation)5123_storage)": {
              "label": "mapping(uint256 => struct withoutMeta.UserInformation)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DocumentReceivedViaTransfer)5176_storage": {
              "label": "struct withoutMeta.DocumentReceivedViaTransfer",
              "members": [
                {
                  "label": "_firstname",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_transferDoc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_GRA",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_MunicipalDoc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_OriginalCertificate",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(LandInformation)5152_storage": {
              "label": "struct withoutMeta.LandInformation",
              "members": [
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_uniqueId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_capital",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_landType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_streetName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_areaOfLand",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_amountWillingToSell",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_requestedAmountForSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_timestampOfModification",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_transferDoc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "_GRA",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "_MunicipalDoc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "_OriginalCertificate",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LandOwner)5159_storage": {
              "label": "struct withoutMeta.LandOwner",
              "members": [
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_userAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(LayoutInformation)5183_storage": {
              "label": "struct withoutMeta.LayoutInformation",
              "members": [
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_coordinates",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_pdf",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(UserInformation)5123_storage": {
              "label": "struct withoutMeta.UserInformation",
              "members": [
                {
                  "label": "_firstName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_lastName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_address",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_ph_number",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_pincode",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_city",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_country",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_email",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_dob",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_gender",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "_age",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "_martial_status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "_occupation",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "_national_id",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "_tin",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "15"
                }
              ],
              "numberOfBytes": "512"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC2771Context": {
        "src": "@openzeppelin/contracts/metatx/ERC2771Context.sol:11",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "MinimalForwarder": {
        "src": "@openzeppelin/contracts/metatx/MinimalForwarder.sol:17",
        "version": {
          "withMetadata": "28563dca770fa2ba4ca7af25e15b36d03f48a426fa603d26de13b0310c1b9c6b",
          "withoutMetadata": "8dcf35d4bac871d0b7098500b83e12f9bcfdcbf981e7a04f4176f9580dec873b",
          "linkedWithoutMetadata": "8dcf35d4bac871d0b7098500b83e12f9bcfdcbf981e7a04f4176f9580dec873b"
        },
        "inherit": [
          "EIP712"
        ],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "()",
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes),bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes),bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MinimalForwarder",
            "src": "@openzeppelin/contracts/metatx/MinimalForwarder.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MinimalForwarder",
              "src": "@openzeppelin/contracts/metatx/MinimalForwarder.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "fad6e7fe696ab1f8c898f7e2fea32bdfa31ad5e8d108ba30aefd8963f6425d9a",
          "withoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076",
          "linkedWithoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8bc9bd3c9c7a2753d1adfd25e375354ace8232705896fa49149179bf267691b9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "39f4b37e13f1f3570a53a17d596a6dead6f5806fc1620041b5aa851b82ce4ea3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "eb3d2617da938e1801e4b531ba3534e545c4fa817689902d79c693163cff4177",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:27",
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_CACHED_DOMAIN_SEPARATOR",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:31"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_CACHED_CHAIN_ID",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_CACHED_THIS",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:33"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_HASHED_NAME",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_HASHED_VERSION",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:36"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_TYPE_HASH",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:37"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "43d8d3c37b226bf4994ce234e2a3cc7f500bbd934419ef52bf7cbf4cd70bdb38",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "UserLandRegistration": {
        "src": "contracts/UserLandRegistration.sol:10",
        "version": {
          "withMetadata": "6c678c13131c62517a2089c5e67f1fee5e1acd820183319bac76dfbf21b80735",
          "withoutMetadata": "4926a700e4c301868ba173b469dcfe97d8b168bc3f56e338f76f2094a295e920",
          "linkedWithoutMetadata": "4926a700e4c301868ba173b469dcfe97d8b168bc3f56e338f76f2094a295e920"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ERC2771Context",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addAdmin(address)",
          "UserRegistration((string,string,string,string,address,string,string,string))",
          "LandRegistration((address,uint256,string,string,uint256,uint256,string))",
          "TransferDocumentsToBuyer(address,string,uint256,string)",
          "createNftForRegisteredUsers(address,string)",
          "LayoutCoordinates((string,string,string))",
          "getAllIds()",
          "verifyUser(address)",
          "checkUserAndIdVerification(address,uint256)",
          "getAllUserAddresses()",
          "getUserDetailsStruct(address,uint256)",
          "getLandDetailsStruct(address,string)",
          "receivedDocumentVerification(address,string)",
          "landOwnershipDetails(address,string)",
          "getLayoutInformation(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UserLandRegistration",
            "src": "contracts/UserLandRegistration.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "contractAdmin",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:19"
            },
            {
              "label": "allUserAddresses",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:20"
            },
            {
              "label": "adminAddresses",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:21"
            },
            {
              "label": "autoGenerateId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:24"
            },
            {
              "label": "nftAutoId",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:25"
            },
            {
              "label": "autoIds",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:26"
            },
            {
              "label": "checkUserAddressAndIdLinked",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:79"
            },
            {
              "label": "userInfoStruct",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserInformation)3501_storage))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:81"
            },
            {
              "label": "landInfoStruct",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(LandInformation)3516_storage))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:83"
            },
            {
              "label": "userVerify",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:84"
            },
            {
              "label": "landRegistered",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:85"
            },
            {
              "label": "currentLandOwner",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_string_memory_ptr,t_struct(LandOwner)3523_storage)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:86"
            },
            {
              "label": "docsReceived",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)3534_storage))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:87"
            },
            {
              "label": "oldOwnerName",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:88"
            },
            {
              "label": "currentLandOwnerInfo",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:89"
            },
            {
              "label": "LayoutDetails",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_string_memory_ptr,t_struct(LayoutInformation)3541_storage)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:90"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UserLandRegistration",
              "src": "contracts/UserLandRegistration.sol:91"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
              "label": "mapping(address => mapping(string => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)3534_storage))": {
              "label": "mapping(address => mapping(string => struct UserLandRegistration.DocumentReceivedViaTransfer))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(LandInformation)3516_storage))": {
              "label": "mapping(address => mapping(string => struct UserLandRegistration.LandInformation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserInformation)3501_storage))": {
              "label": "mapping(address => mapping(uint256 => struct UserLandRegistration.UserInformation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))": {
              "label": "mapping(string => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)3534_storage)": {
              "label": "mapping(string => struct UserLandRegistration.DocumentReceivedViaTransfer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LandInformation)3516_storage)": {
              "label": "mapping(string => struct UserLandRegistration.LandInformation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LandOwner)3523_storage)": {
              "label": "mapping(string => struct UserLandRegistration.LandOwner)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LayoutInformation)3541_storage)": {
              "label": "mapping(string => struct UserLandRegistration.LayoutInformation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(UserInformation)3501_storage)": {
              "label": "mapping(uint256 => struct UserLandRegistration.UserInformation)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DocumentReceivedViaTransfer)3534_storage": {
              "label": "struct UserLandRegistration.DocumentReceivedViaTransfer",
              "members": [
                {
                  "label": "_firstname",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_docs",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(LandInformation)3516_storage": {
              "label": "struct UserLandRegistration.LandInformation",
              "members": [
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_uniqueId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_landType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_areaOfLand",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_timestampOfModification",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_docs",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(LandOwner)3523_storage": {
              "label": "struct UserLandRegistration.LandOwner",
              "members": [
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_userAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(LayoutInformation)3541_storage": {
              "label": "struct UserLandRegistration.LayoutInformation",
              "members": [
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_coordinates",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_pdf",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(UserInformation)3501_storage": {
              "label": "struct UserLandRegistration.UserInformation",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ph_number",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_pincode",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_email",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_gender",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_national_id",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_tin",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "withoutMeta": {
        "src": "contracts/withoutMeta.sol:10",
        "version": {
          "withMetadata": "e6b474e8a39ae03b421e3e0d46d3561e91609e362af5c39fb7f98ce48c0912a5",
          "withoutMetadata": "79dd25f6f4b65a9f2dd5ac2a535ae63a98ed69c7a8483a69e3a8db173ad1b762",
          "linkedWithoutMetadata": "79dd25f6f4b65a9f2dd5ac2a535ae63a98ed69c7a8483a69e3a8db173ad1b762"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "UserRegistration((string,string,string,uint256,uint256,string,string,string,address,string,string,string,string,string,string,string))",
          "LandRegistration((address,uint256,string,string,string,string,uint256,uint256,uint256,uint256,string,string,string,string))",
          "TransferDocumentsToBuyer(address,string,uint256,string)",
          "createNftForRegisteredUsers(address,string)",
          "LayoutCoordinates((string,string,string))",
          "getAllIds()",
          "verifyUser(address)",
          "checkUserAndIdVerification(address,uint256)",
          "getAllUserAddresses()",
          "getUserDetailsStruct(address,uint256)",
          "getLandDetailsStruct(address,string)",
          "receivedDocumentVerification(address,string)",
          "landOwnershipDetails(address,string)",
          "getLayoutInformation(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "withoutMeta",
            "src": "contracts/withoutMeta.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "contractAdmin",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:18"
            },
            {
              "label": "allUserAddresses",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:19"
            },
            {
              "label": "autoGenerateId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:22"
            },
            {
              "label": "nftAutoId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:23"
            },
            {
              "label": "autoIds",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:24"
            },
            {
              "label": "checkUserAddressAndIdLinked",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:93"
            },
            {
              "label": "userInfoStruct",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserInformation)4569_storage))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:95"
            },
            {
              "label": "landInfoStruct",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(LandInformation)4598_storage))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:97"
            },
            {
              "label": "userVerify",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:98"
            },
            {
              "label": "landRegistered",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:99"
            },
            {
              "label": "currentLandOwner",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_string_memory_ptr,t_struct(LandOwner)4605_storage)",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:100"
            },
            {
              "label": "docsReceived",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)4622_storage))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:101"
            },
            {
              "label": "oldOwnerName",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:102"
            },
            {
              "label": "currentLandOwnerInfo",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:103"
            },
            {
              "label": "LayoutDetails",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_string_memory_ptr,t_struct(LayoutInformation)4629_storage)",
              "contract": "withoutMeta",
              "src": "contracts/withoutMeta.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
              "label": "mapping(address => mapping(string => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)4622_storage))": {
              "label": "mapping(address => mapping(string => struct withoutMeta.DocumentReceivedViaTransfer))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(LandInformation)4598_storage))": {
              "label": "mapping(address => mapping(string => struct withoutMeta.LandInformation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserInformation)4569_storage))": {
              "label": "mapping(address => mapping(uint256 => struct withoutMeta.UserInformation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))": {
              "label": "mapping(string => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(DocumentReceivedViaTransfer)4622_storage)": {
              "label": "mapping(string => struct withoutMeta.DocumentReceivedViaTransfer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LandInformation)4598_storage)": {
              "label": "mapping(string => struct withoutMeta.LandInformation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LandOwner)4605_storage)": {
              "label": "mapping(string => struct withoutMeta.LandOwner)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(LayoutInformation)4629_storage)": {
              "label": "mapping(string => struct withoutMeta.LayoutInformation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(UserInformation)4569_storage)": {
              "label": "mapping(uint256 => struct withoutMeta.UserInformation)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DocumentReceivedViaTransfer)4622_storage": {
              "label": "struct withoutMeta.DocumentReceivedViaTransfer",
              "members": [
                {
                  "label": "_firstname",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_transferDoc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_GRA",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_MunicipalDoc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_OriginalCertificate",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(LandInformation)4598_storage": {
              "label": "struct withoutMeta.LandInformation",
              "members": [
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_uniqueId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_capital",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_landType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_streetName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_areaOfLand",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_amountWillingToSell",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_requestedAmountForSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_timestampOfModification",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_transferDoc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "_GRA",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "_MunicipalDoc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "_OriginalCertificate",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(LandOwner)4605_storage": {
              "label": "struct withoutMeta.LandOwner",
              "members": [
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_userAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(LayoutInformation)4629_storage": {
              "label": "struct withoutMeta.LayoutInformation",
              "members": [
                {
                  "label": "_plotId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_coordinates",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_pdf",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(UserInformation)4569_storage": {
              "label": "struct withoutMeta.UserInformation",
              "members": [
                {
                  "label": "_firstName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_lastName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_address",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_ph_number",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_pincode",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_city",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "_country",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "_email",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "_walletAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "_dob",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "_gender",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "_age",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "_martial_status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "_occupation",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "_national_id",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "_tin",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "15"
                }
              ],
              "numberOfBytes": "512"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    }
  ]
}